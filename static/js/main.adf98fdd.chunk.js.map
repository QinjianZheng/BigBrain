{"version":3,"sources":["pages/NewGamePage/NewGamePage.module.css","components/Buttons/Buttons.js","utils/api.js","utils/store.js","components/LogoutButton/LogoutButton.jsx","components/Nav/Nav.jsx","components/PasswordInput/PasswordInput.jsx","components/TextInput/TextInput.jsx","pages/LoginPage/LoginPage.jsx","pages/RegisterPage/RegisterPage.jsx","utils/helpers.js","components/Dropdown/Dropdown.jsx","components/GameCard/GameCard.jsx","styles.js","pages/DashboardPage/DashboardPage.jsx","pages/NewGamePage/NewGamePage.jsx","components/Modal/Modal.jsx","components/Overlay/Overlay.jsx","components/QuestionCard/QuestionCard.jsx","pages/EditGamePage/EditGamePage.jsx","pages/EditQuestionPage/EditQuestionPage.styles.js","pages/EditQuestionPage/EditQuestionPage.jsx","pages/PlayResultPage/PlayResultPage.styles.js","pages/ResultPage/ResultPage.styles.js","pages/ResultPage/ResultPage.jsx","pages/JoinPage/JoinPage.jsx","pages/PlayGamePage/PlayGamePage.styles.js","pages/PlayGamePage/PlayGamePage.jsx","pages/LobbyPage/LobbyPage.styles.js","pages/LobbyPage/LobbyPage.jsx","pages/PlayResultPage/PlayResultPage.jsx","App.jsx","index.jsx","components/GameCard/GameCard.module.css","components/QuestionCard/QuestionCard.module.css","components/Nav/Nav.module.css","components/Dropdown/Dropdown.module.css","components/Modal/Modal.module.css","pages/EditGamePage/EditGamePage.module.css","components/PasswordInput/PasswordInput.module.css","pages/LoginPage/LoginPage.module.css","pages/RegisterPage/RegisterPage.module.css","pages/DashboardPage/DashboardPage.module.css","components/TextInput/TextInput.module.css","components/Overlay/Overlay.module.css"],"names":["module","exports","removeButtonStyles","css","BaseButton","styles","button","clickAnimation","keyframes","createHoverableButton","backgroundColor","hoverColor","inverted","props","animated","undefined","PrimaryButton","SecondaryButton","ContrastButton","ConfirmButton","EndButton","BorderButton","WhiteButton","API","url","this","path","options","fetch","then","res","catch","err","console","warn","message","getJSON","StoreContext","React","createContext","StoreProvider","children","useState","modalActive","overlayActive","modalHeaderText","modalBodyText","modalColors","modalStatus","setModalStatus","store","api","Provider","value","LogoutButton","className","history","useHistory","context","useContext","logout","a","makeAPIRequest","method","headers","accept","Authorization","localStorage","getItem","response","status","clear","log","push","json","error","modalHodyText","toString","label","onClick","Nav","visibilities","exit","confirm","classNames","map","item","to","logo","PasswordInput","passwordHide","setpasswordHide","passwordField","name","type","passwordArea","onChange","onKeyDown","ShowPasswordLogo","Tooltip","title","aria-label","showPasswordLogo","TextInput","inputField","inputArea","LoginPage","emailInput","setEmailInput","passwordInput","setPasswordInput","setMessage","messageError","setMessageError","login","Accept","body","JSON","stringify","email","password","setItem","token","main","e","target","RegisterPage","nameInput","setNameInput","register","fileToDataUrl","file","find","Error","reader","FileReader","dataUrlPromise","Promise","resolve","reject","onerror","onload","result","readAsDataURL","Dropdown","toEditGamePage","deleteGame","dropdown","setDropdown","useEffect","window","addEventListener","removeEventListener","moreOptionsWrapper","stopPropagation","icon","DropdownButton","aria-expanded","moreOptions","DropdownItem","innerItem","content","GameCard","id","gameDelete","setGameDelete","sessionStarted","setSessionStarted","sessionId","setSessionId","thumbnailUpdated","setThumbnailUpdated","imageSrc","setImageSrc","questions","quiz","setQuiz","updateGame","q","thumbnail","t","getQuiz","endSession","active","bodyStyles","positon","textStyles","fontSize","marginBlockStart","buttonStyles","marginLeft","buttonContainerStyles","position","right","bottom","style","startSession","getSessionId","newSessionId","updateImageSrc","files","src","newQuiz","removeImage","card","img","alt","removeButton","htmlFor","addImageIcon","hidden","questionNum","length","info","rightTopContainer","gameStatus","gameButtons","text","onCopy","copyButton","confrimButton","metadata","time","forEach","parseInt","timeLimit","getTotalTime","buttons","Main","styled","div","DashboardPage","games","setGames","addingNewGame","setAddingNewGame","hover","setHover","getGames","quizzes","gs","topBar","addGame","fill","onMouseEnter","onMouseLeave","gameContainer","sort","b","Date","createdAt","idx","NewGamePage","titleInput","setTitleInput","key","Modal","errorColors","background","border","warningColors","successColors","notificationColors","colors","setColors","closeModal","escape","modalHidden","header","borderColor","color","data-test-target","closeButton","Overlay","overlayHidden","QuestionCard","deleteQuestion","newQuestions","splice","quizid","updateDelete","delete","question","qString","mediaType","mediaContainer","image","video","frameBorder","allow","allowFullScreen","EditGamePage","gameid","useParams","added","setAdded","deleted","setDeleted","toEdit","setToEdit","setName","addQuestion","point","answers","correctAnswers","getGame","updateGameName","inputContainer","editIcon","questionContainer","imageLarge","imageMedium","imageSmall","MainContainer","QuestionContainer","QuestionIuputContainer","VideoContainer","iframe","OptionContainer","OptionInnerContainer","AnswerFieldContainer","AnswerOuterContainer","AnswerContainer","CheckBoxContainer","RadioContainer","AddImageContainer","AddImageContainerNoBorder","Image","EditQuestionPage","qid","classes","makeStyles","theme","formControl","margin","spacing","minWidth","display","flexDirection","useStyles","setType","setQString","setTimeLimit","setPoint","numberOfAnswers","setNumberOfAnswers","setAnswers","setCorrectAnswers","correctAnswer","setCorrectAnswer","setMediaType","edited","setEdited","videoUrl","setVideoUrl","updateQuestion","updateCorrectAnswer","newCorrectAnswers","i","c","newAnswers","qData","ans","TextField","placeholder","fullWidth","InputLabelProps","shrink","variant","padding","borderRadius","cursor","top","width","height","FormControl","component","updateAnswers","FormControlLabel","control","Checkbox","checked","updateCorrectAnswers","Radio","FormLabel","RadioGroup","newUrl","replace","InputLabel","Select","labelId","MenuItem","MyInfoCircle","BsInfoCircle","PageTitle","h1","CharContainer","ResultPage","sessionid","results","setResults","scores","setScores","points","setPoints","averageTimeTakenByQuestion","setAverageTimeTakenByQuestion","percentOfPeopleCorrectByQuestion","setPercentOfPeopleCorrectByQuestion","tableContainer","maxWidth","table","fontWeight","chart","InfoTooltip","withStyles","tooltip","typography","pxToRem","getResults","newResults","newScores","newPoints","newTotalTimeTaken","newNumOfPeopleCorrectByQuestion","player","score","newAnsPoints","timeTaken","answeredAt","questionStartedAt","correct","Math","round","questionPoints","questionDuration","numberOfPeopleCorrect","newAverageTimeTaken","newPercentOfPeopleCorrectByQuestion","n","percentage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","Typography","TableBody","slice","p","reduce","accumulator","currentValue","data","tickFormat","scale","valueField","argumentField","JoinPage","joinSession","playerId","QuestionStringContainer","QuestionAdminContainer","MediaContainer","AnswerAdminContainer","AnswerInnerContainer","SelectionContainer","MyCountdown","ControlButton","root","checkboxLabel","WhiteCheckbox","WhiteRadio","iconStyles","backgroundColors","PlayGamePage","playerid","setQuestion","submitAnswer","setSubmitAnswer","submitAnswers","setSubmitAnswers","advanced","setAdvanced","over","setOver","stop","setStop","startTime","useRef","now","updateSubmitAnswers","newSubmitAnswers","submit","answerQuestion","updateSubmitAnswer","answerIds","getStatus","started","getQuestion","getPlayerCorrectAnswers","getAdminQuestions","advanceGame","r","useInterval","current","isCorrect","corrects","showCorrectAnswers","setTimeout","date","renderer","seconds","onComplete","FormGroup","opacity","includes","disabled","inputProps","Container","section","TextContainer","PlayerContainer","StartButton","NameContainer","PlayerNum","LobbyPage","isAdmin","setIsAdmin","getAdminStatus","j","players","setScore","performances","setPerformances","setTimeTaken","greencheck","redcross","newScore","newPerformances","newTimeTaken","App","basename","exact","PlayResultPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adf98fdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewGamePage_main__3qCBx\"};","import styles, { css, keyframes } from 'styled-components';\n\nexport const removeButtonStyles = css`\n    border: 0;\n    padding: 0;\n    font-family: inherit;\n    font-weight: normal;\n    background-color: unset;\n    outline: none;\n`;\n\nexport const BaseButton = styles.button`\n    ${removeButtonStyles};\n    cursor: pointer;\n    font-weight: bold;\n    border-radius: 4px;\n    padding: 10px 16px;\n    min-width: 90px;\n    box-sizing: border-box;\n`;\n\nconst clickAnimation = keyframes`\n    0% {\n        transform: scale(1);\n        border-radius: 4px;\n    }\n\n    50% {\n        transform: scale(1.01);\n    }\n\n    75% {\n        transform: scale(0.99);\n    }\n\n    100% {\n        transform: scale(1);\n    }\n`;\n\nconst createHoverableButton = (backgroundColor, hoverColor, inverted) => {\n  return (\n    styles(BaseButton)`\n            background-color: ${backgroundColor};\n            color: ${inverted ? 'white' : 'black'};\n            &:hover {\n                background-color: ${hoverColor};\n                animation: ${props => props.animated ? css`${clickAnimation} 0.25s ease-in-out` : undefined};\n            }\n        `\n  );\n};\n\nexport const PrimaryButton = createHoverableButton(\n  '#19aaee',\n  '#33bbff',\n  true,\n);\n\nexport const SecondaryButton = createHoverableButton(\n  '#d5d7d7',\n  '#edf0f2',\n  false,\n);\n\nexport const ContrastButton = createHoverableButton(\n  '#7d2ae8',\n  '#8d39fa',\n  true,\n);\n\nexport const ConfirmButton = createHoverableButton(\n  'rgb(38, 137, 12)',\n  'rgb(35, 126, 11)',\n  true,\n);\n\nexport const EndButton = createHoverableButton(\n  'rgb(220, 0, 78)',\n  'rgb(154, 0, 54)',\n  true,\n);\n\nexport const BorderButton = styles(BaseButton)`\n  border: solid 1px rgb(51, 51, 51);\n  background-color: white;\n  color: black;\n  &:hover {\n      opacity: 0.6;\n      animation: ${props => props.animated ? css`${clickAnimation} 0.25s ease-in-out` : undefined};\n  }\n`;\n\nexport const WhiteButton = createHoverableButton(\n  'white',\n  '#f0f0f0',\n  false,\n);\n","/**\n * Make a request to `path` with `options` and parse the response as JSON.\n * @param {*} path The url to make the reques to.\n * @param {*} options Additiona options to pass to fetch.\n */\nconst getJSON = (path, options) =>\n  fetch(path, options)\n    .then(res => res)\n    .catch(err => console.warn(`API_ERROR: ${err.message}`));\n\n/**\n * This is a sample class API which you may base your code on.\n * You may use this as a launch pad but do not have to.\n */\nexport default class API {\n  /** @param {String} url */\n  constructor (url) {\n    this.url = url;\n  }\n\n  /** @param {String} path */\n  makeAPIRequest (path, options) {\n    return getJSON(`${this.url}/${path}`, options);\n  }\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nimport API from './api';\n\nexport const StoreContext = React.createContext(null)\n\nconst StoreProvider = ({ children }) => {\n  const [modalStatus, setModalStatus] = useState({\n    modalActive: false,\n    overlayActive: false,\n    modalHeaderText: '',\n    modalBodyText: <></>,\n    modalColors: 'default',\n  })\n  const [api] = useState(new API('http://8.140.23.228'));\n  const store = {\n    api: [api],\n    modalStatus: [modalStatus, setModalStatus],\n  }\n\n  return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n}\n\nStoreProvider.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default StoreProvider;\n","import React, { useContext } from 'react';\nimport API from '../../utils/api';\nimport { SecondaryButton } from '../Buttons/Buttons';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { StoreContext } from '../../utils/store';\nconst api = new API('http://8.140.23.228');\n\nconst LogoutButton = ({ className }) => {\n  const history = useHistory();\n  const context = useContext(StoreContext);\n  const [, setModalStatus] = context.modalStatus;\n\n  const logout = async () => {\n    const response = await api.makeAPIRequest('admin/auth/logout', {\n      method: 'POST',\n      headers: {\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n    });\n    try {\n      if (response.status === 200) {\n        localStorage.clear();\n        console.log('logout!');\n        history.push('/login');\n      } else {\n        const json = await response.json();\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalHodyText: e.toString(),\n        modalColors: 'error',\n      }));\n    }\n  }\n  return (\n    <SecondaryButton\n      label='logout'\n      className={className}\n      onClick={logout}>\n      <span>Log out</span>\n    </SecondaryButton>\n  );\n};\n\nLogoutButton.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default LogoutButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Nav.module.css';\nimport { BorderButton, ConfirmButton, ContrastButton, PrimaryButton } from '../Buttons/Buttons';\nimport PropTypes from 'prop-types';\nimport LogoutButton from '../LogoutButton/LogoutButton';\n\nconst Nav = ({ visibilities, exit, confirm }) => {\n  const classNames = visibilities.map(item => {\n    return (item === 'true' ? 'normal' : 'hidden')\n  });\n\n  return (\n    <nav>\n      <div>\n        {localStorage.getItem('token')\n          ? <Link to='/' className={styles.logo}>BigBrain</Link>\n          : <Link to='/login' className={styles.logo}>BigBrain</Link>}\n      </div>\n      <div>\n        <Link to='/login' className={styles.path}>\n          <PrimaryButton className={styles[classNames[0]]}>\n            <span>Log in</span>\n          </PrimaryButton>\n        </Link>\n        <Link to='/register' className={styles.path}>\n          <ContrastButton className={styles[classNames[1]]}>\n            <span>Register</span>\n          </ContrastButton>\n        </Link>\n        <LogoutButton className={styles[classNames[2]]} />\n        <BorderButton\n          label='exit'\n          className={styles[classNames[3]]}\n          onClick={exit}\n        >\n          <span>Exit</span>\n        </BorderButton>\n        <ConfirmButton\n          label='confirm'\n          className={styles[classNames[4]]}\n          onClick={confirm}\n        >\n          <span>Done</span>\n        </ConfirmButton>\n      </div>\n    </nav>\n  );\n}\n\nNav.propTypes = {\n  visibilities: PropTypes.array,\n  exit: PropTypes.func,\n  confirm: PropTypes.func,\n};\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport styles from './PasswordInput.module.css';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst PasswordInput = (props) => {\n  const [passwordHide, setpasswordHide] = useState(true);\n  const showPassword = () => setpasswordHide(!passwordHide);\n  return (\n    <div>\n      <h4>Password</h4>\n      <div className={styles.passwordField}>\n        <input\n          name={props.name}\n          type={passwordHide ? 'password' : 'text'}\n          className={styles.passwordArea}\n          value={props.value}\n          onChange={props.onChange}\n          onKeyDown={props.onKeyDown}\n        />\n        <ShowPasswordLogo passwordHide={passwordHide} onClick={showPassword} />\n      </div>\n    </div>\n  );\n};\n\nPasswordInput.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n};\n\nexport default PasswordInput;\n\nexport const ShowPasswordLogo = ({ passwordHide, onClick }) => {\n  return (\n    <span>\n      {passwordHide\n        ? <Tooltip title=\"Show Password\">\n          <span>\n            <AiOutlineEye\n              aria-label='show password'\n              className={styles.showPasswordLogo}\n              onClick={onClick}\n            />\n          </span>\n        </Tooltip>\n        : <Tooltip title=\"Hide Password\">\n          <span>\n            <AiOutlineEyeInvisible\n              aria-label='hide password'\n              className={styles.showPasswordLogo}\n              onClick={onClick}\n            />\n          </span>\n        </Tooltip>\n      }\n    </span>\n  );\n};\n\nShowPasswordLogo.propTypes = {\n  passwordHide: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport styles from './TextInput.module.css';\nimport PropTypes from 'prop-types';\n\nconst TextInput = (props) => {\n  return (\n    <div>\n      <h4>{props.label}</h4>\n      <div className={styles.inputField}>\n        <input\n          type=\"text\"\n          name={props.name}\n          className={styles.inputArea}\n          value={props.value}\n          onChange={props.onChange}\n          onKeyDown={props.onKeyDown}\n        />\n      </div>\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n};\n\nexport default TextInput;\n","// Route: '/login'\nimport React, { useState } from 'react';\nimport styles from './LoginPage.module.css';\nimport { PrimaryButton } from '../../components/Buttons/Buttons';\nimport Nav from '../../components/Nav/Nav';\nimport PasswordInput from '../../components/PasswordInput/PasswordInput';\nimport TextInput from '../../components/TextInput/TextInput';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport API from '../../utils/api';\n\nconst LoginPage = () => {\n  const [emailInput, setEmailInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageError, setMessageError] = useState(false);\n  const history = useHistory();\n  const api = new API('http://8.140.23.228');\n\n  // api call functions\n  const login = async () => {\n    const response = await api.makeAPIRequest('admin/auth/login', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: emailInput,\n        password: passwordInput,\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        localStorage.setItem('token', json.token);\n        setMessageError(false);\n        setMessage('');\n        history.push('/');\n      } else {\n        setMessageError(true);\n        setMessage(json.error);\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setMessageError(true);\n      setMessage('Sorry! Can\\' connect to the server.');\n    }\n  };\n\n  if (localStorage.getItem('token')) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <section>\n      <Nav visibilities={['true', 'true', 'false', 'false', 'false']} />\n      <div className={styles.main}>\n        <h2>Log in</h2>\n        <TextInput\n          name='email'\n          label=\"Email\"\n          value={emailInput}\n          onChange={e => setEmailInput(e.target.value)}\n        />\n        <PasswordInput\n          name='password'\n          value={passwordInput}\n          onChange={e => setPasswordInput(e.target.value)}\n        />\n        <PrimaryButton\n          label='login-button'\n          animated\n          className={styles.button}\n          onClick={login}\n        >\n          <span>Log in</span>\n        </PrimaryButton>\n        <p className={styles[messageError ? 'error' : 'message']}>{message}</p>\n        <p>\n          Don&apos;t have an account? <Link to='/register'>Sign up</Link>\n        </p>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginPage;\n","// Route: '/register'\nimport React, { useContext, useState } from 'react';\nimport styles from './RegisterPage.module.css';\nimport { ContrastButton } from '../../components/Buttons/Buttons';\nimport Nav from '../../components/Nav/Nav';\nimport PasswordInput from '../../components/PasswordInput/PasswordInput';\nimport TextInput from '../../components/TextInput/TextInput';\nimport { StoreContext } from '../../utils/store';\nimport { useHistory } from 'react-router-dom';\n\nconst RegisterPage = () => {\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const history = useHistory();\n\n  // input states\n  const [nameInput, setNameInput] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageError, setMessageError] = useState(false);\n\n  // api call functions\n  const register = async () => {\n    const response = await api.makeAPIRequest('admin/auth/register', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: emailInput,\n        password: passwordInput,\n        name: nameInput,\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        localStorage.setItem('token', json.token);\n        setMessageError(false);\n        setMessage('');\n        history.push('/');\n      } else {\n        setMessageError(true);\n        setMessage(json.error);\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setMessageError(true);\n      setMessage('Sorry! Can\\' connect to the server.');\n    }\n  };\n\n  return (\n    <section>\n      <Nav visibilities={['true', 'true', 'false', 'false', 'false']} />\n      <div className={styles.main}>\n        <h2>Register</h2>\n        <TextInput\n          label='Name'\n          name='name'\n          onChange={e => setNameInput(e.target.value)}\n          value={nameInput}\n        />\n        <TextInput\n          label='Email'\n          name='email'\n          onChange={e => setEmailInput(e.target.value)}\n          value={emailInput}\n        />\n        <PasswordInput\n          name='password'\n          onChange={e => setPasswordInput(e.target.value)}\n          value={passwordInput}\n        />\n        <ContrastButton\n          label='register-button'\n          animated className={styles.button}\n          onClick={register}\n        >\n          <span>Sign up</span>\n        </ContrastButton>\n        <p className={styles[messageError ? 'error' : 'message']}>{message}</p>\n      </div>\n    </section>\n  );\n};\n\nexport default RegisterPage;\n","/**\n * Given a js file object representing a jpg or png image, such as one taken\n * from a html file input element, return a promise which resolves to the file\n * data as a data url.\n * More info:\n *   https://developer.mozilla.org/en-US/docs/Web/API/File\n *   https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n *   https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n *\n * Example Usage:\n *   const file = document.querySelector('input[type=\"file\"]').files[0];\n *   console.log(fileToDataUrl(file));\n * @param {File} file The file to be read.\n * @return {Promise<string>} Promise which resolves to the file as a data url.\n */\nexport function fileToDataUrl (file) {\n  const validFileTypes = ['image/jpeg', 'image/png', 'image/jpg']\n  const valid = validFileTypes.find(type => type === file.type);\n  // Bad data, let's walk away.\n  if (!valid) {\n    throw Error('provided file is not a png, jpg or jpeg image.');\n  }\n\n  const reader = new FileReader();\n  const dataUrlPromise = new Promise((resolve, reject) => {\n    reader.onerror = reject;\n    reader.onload = () => resolve(reader.result);\n  });\n  reader.readAsDataURL(file);\n  return dataUrlPromise;\n}\n","import React, { useState, useEffect } from 'react';\nimport { BsThreeDots } from 'react-icons/bs';\nimport { FiEdit } from 'react-icons/fi';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport PropTypes from 'prop-types';\nimport { BaseButton } from '../Buttons/Buttons';\nimport styles from './Dropdown.module.css';\n\nexport const Dropdown = ({ toEditGamePage, deleteGame }) => {\n  const [dropdown, setDropdown] = useState(false);\n\n  const updateDropdown = (e) => {\n    e.stopPropagation();\n    setDropdown(!dropdown);\n  };\n  useEffect(() => {\n    const onClick = () => setDropdown(false);\n    window.addEventListener('click', onClick);\n\n    return () => {\n      window.removeEventListener('click', onClick);\n    }\n  }, []);\n\n  return (\n    <div className={styles.moreOptionsWrapper} >\n      <DropdownButton onClick={updateDropdown} />\n      {dropdown &&\n        <div className={styles.dropdown}>\n          <DropdownItem\n            onClick={toEditGamePage}\n            title='Edit'\n            label='Edit-game'\n          >\n            <FiEdit className={styles.icon} />\n          </DropdownItem>\n          <DropdownItem\n            onClick={deleteGame}\n            title='Delete'\n            label='Delete-game'\n          >\n            <RiDeleteBin5Line className={styles.icon} />\n          </DropdownItem>\n        </div>\n      }\n  </div>\n  );\n};\n\nDropdown.propTypes = {\n  deleteGame: PropTypes.func,\n  toEditGamePage: PropTypes.func,\n}\n\nexport const DropdownButton = ({ onClick, dropdown }) => {\n  return (\n      <BsThreeDots\n        aria-label='open-dropdown'\n        aria-expanded={dropdown}\n        className={styles.moreOptions}\n        onClick={onClick}\n      />\n  );\n};\n\nDropdownButton.propTypes = {\n  onClick: PropTypes.func,\n  dropdown: PropTypes.bool,\n};\n\nexport const DropdownItem = ({ onClick, children, title, label }) => {\n  return (\n    <div className={styles.item}>\n    <BaseButton\n      label={label}\n      className={styles.button}\n      onClick={onClick}>\n      <div className={styles.innerItem}>\n        <span className={styles.content}>\n          <span>{children}</span>\n          <p>{title}</p>\n        </span>\n      </div>\n    </BaseButton>\n  </div>\n  );\n};\nDropdownItem.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.object,\n  title: PropTypes.string,\n  label: PropTypes.string,\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  PrimaryButton, SecondaryButton,\n  BaseButton, ConfirmButton,\n  EndButton, ContrastButton\n} from '../Buttons/Buttons';\nimport { fileToDataUrl } from '../../utils/helpers';\nimport styles from './GameCard.module.css';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { StoreContext } from '../../utils/store';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { BiImageAdd } from 'react-icons/bi';\nimport { ImCross } from 'react-icons/im';\nimport { Dropdown } from '../Dropdown/Dropdown';\n\nexport const GameCard = ({ id, gameDelete, setGameDelete }) => {\n  const history = useHistory();\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n\n  // control states\n  const [sessionStarted, setSessionStarted] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n  const [thumbnailUpdated, setThumbnailUpdated] = useState(0);\n\n  // quiz states\n  const [imageSrc, setImageSrc] = useState('');\n  const [quiz, setQuiz] = useState({\n    questions: [],\n  });\n\n  // api call functions\n  const updateGame = async (q) => {\n    const response = await api.makeAPIRequest(`admin/quiz/${id}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({\n        questions: q.questions,\n        thumbnail: q.thumbnail,\n        name: q.name,\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        setThumbnailUpdated(t => t + 1);\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const deleteGame = async (e) => {\n    const response = await api.makeAPIRequest(`admin/quiz/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        setGameDelete(!gameDelete);\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const getQuiz = async () => {\n    const response = await api.makeAPIRequest(`admin/quiz/${id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const endSession = async () => {\n    console.log('end session', quiz.active);\n    const response = await api.makeAPIRequest(`admin/quiz/${id}/end`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        const bodyStyles = {\n          positon: 'relative',\n        }\n        const textStyles = {\n          fontSize: '1.2em',\n          marginBlockStart: '0',\n        }\n        const buttonStyles = {\n          marginLeft: '5px',\n        };\n        const buttonContainerStyles = {\n          position: 'absolute',\n          right: '10px',\n          bottom: '5px',\n        };\n        setSessionStarted(false);\n        setSessionId('');\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Session Ended!',\n          modalBodyText:\n            <div style={bodyStyles}>\n              <p style={textStyles}>Would you like to view the results?</p>\n              <div style={buttonContainerStyles}>\n                <PrimaryButton\n                  aria-label='see-result'\n                  style={buttonStyles}\n                  onClick={() => {\n                    history.push('/game/result/' + sessionId);\n                    setModalStatus(status => ({\n                      ...status,\n                      modalActive: false,\n                      overlayActive: false,\n                      modalBodyText: <></>,\n                    }));\n                  }}\n                >\n                  Yes\n              </PrimaryButton>\n                <SecondaryButton\n                  aria-label='cancel'\n                  style={buttonStyles}\n                  onClick={() => {\n                    setModalStatus(status => ({\n                      ...status,\n                      modalActive: false,\n                      overlayActive: false,\n                      modalBodyText: <></>,\n                    }));\n                  }}\n                >\n                  No\n              </SecondaryButton>\n              </div>\n            </div>,\n          modalColors: 'notification',\n        }));\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n  const startSession = async () => {\n    console.log('start session');\n    const response = await api.makeAPIRequest(`admin/quiz/${id}/start`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        setSessionStarted(true);\n        const newSessionId = await getSessionId();\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Session Started!',\n          modalBodyText: newSessionId,\n          modalColors: 'success',\n        }));\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const getSessionId = async () => {\n    const response = await api.makeAPIRequest(`admin/quiz/${id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json.active;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  // calculate total time for a quiz\n  const getTotalTime = () => {\n    let time = 0;\n    quiz.questions.forEach(q => (time += parseInt(q.timeLimit, 10)));\n    return time;\n  };\n\n  // thumbnail control\n  const updateImageSrc = async (e) => {\n    const src = await fileToDataUrl(e.target.files[0]);\n    console.log(e.target.files);\n    setImageSrc(src);\n    const newQuiz = { ...quiz };\n    newQuiz.thumbnail = src;\n    await updateGame(newQuiz);\n  };\n\n  const removeImage = async () => {\n    setImageSrc('')\n    const response = await api.makeAPIRequest(`admin/quiz/${id}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({\n        thumbnail: 'NULL',\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        setThumbnailUpdated(t => t + 1);\n        // console.log('delete thumbnail');\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  // quiz set up\n  useEffect(async () => {\n    const q = await getQuiz();\n    console.log(q);\n    setQuiz(q);\n    setSessionId(q.active);\n    setImageSrc(q.thumbnail);\n    if (q.active) setSessionStarted(true);\n  }, [id, sessionStarted, thumbnailUpdated]);\n\n  // copy click show modal\n  const onCopyLink = () => {\n    setModalStatus(status => ({\n      ...status,\n      modalActive: true,\n      overlayActive: true,\n      modalHeaderText: 'Copied!',\n      modalBodyText: `Link http://localhost:3000/play/join/${sessionId}/${id} is copied`,\n      modalColors: 'success',\n    }));\n  };\n\n  const toEditGamePage = () => {\n    history.push('/game/' + id);\n  };\n\n  return (\n    <div className={styles.card}>\n      {/* Thumbnail */}\n      <div\n        className={styles.thumbnail}>\n        {imageSrc && imageSrc !== 'NULL'\n          ? <>\n              <img\n                className={styles.img}\n                src={imageSrc}\n                alt='question thumbnail' />\n              <ImCross\n                className={styles.removeButton}\n                onClick={removeImage}\n              />\n            </>\n          : <>\n              <label htmlFor={`add-image${id}`}>\n                <BiImageAdd className={styles.addImageIcon} />\n              </label>\n              <input\n                type='file'\n                id={`add-image${id}`}\n                file={imageSrc}\n                onChange={updateImageSrc}\n                hidden />\n            </>\n        }\n        <span className={styles.questionNum}>{quiz.questions.length} Question</span>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.rightTopContainer}>\n          <h3 label='game-name'>{quiz.name}</h3>\n          <div className={styles.gameStatus}>\n            {sessionStarted\n              ? <>\n                <div className={styles.gameButtons}>\n                  <EndButton\n                    aria-label='end-game'\n                    className={styles.button}\n                    onClick={endSession}\n                  >\n                    End\n                </EndButton>\n                  <ContrastButton\n                    aria-label='lobby'\n                    className={styles.button}\n                    onClick={() => history.push(`/lobby/${sessionId}/${id}/0`)}\n                  >\n                    Lobby\n                  </ContrastButton>\n                </div>\n                <CopyToClipboard text={`http://localhost:3000/play/join/${sessionId}/${id}`} onCopy={onCopyLink}>\n                  <BaseButton\n                    aria-label='copy-join-link'\n                    className={styles.copyButton}\n                    onClick={() => console.log(sessionId)}\n                  >\n                    Copy Link to Join\n                  </BaseButton>\n                </CopyToClipboard>\n\n              </>\n              : <ConfirmButton\n                aria-label='start-game'\n                className={styles.confrimButton}\n                onClick={startSession}\n              >\n                Start\n                </ConfirmButton>\n            }\n          </div>\n        </div>\n        <div className={styles.metadata}>\n          <span>{getTotalTime()} Seconds</span>\n          <div className={styles.buttons}>\n              <PrimaryButton\n                className={styles.button}\n                onClick={toEditGamePage}\n              >\n                <span>Edit</span>\n              </PrimaryButton>\n            <SecondaryButton\n              className={styles.button}\n              onClick={deleteGame}\n            >\n              <span>Delete</span>\n            </SecondaryButton>\n          </div>\n          <Dropdown\n            deleteGame={deleteGame}\n            toEditGamePage={toEditGamePage}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nGameCard.propTypes = {\n  id: PropTypes.number,\n  gameDelete: PropTypes.bool,\n  setGameDelete: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-width: 300px;\n  background-color: white;\n  box-shadow: 0 0 5px rgba(0,0,0,0.2);\n`;\n","// Route: '/'\nimport React, { useContext, useState, useEffect } from 'react';\nimport Nav from '../../components/Nav/Nav';\nimport styles from './DashboardPage.module.css';\nimport { GameCard } from '../../components/GameCard/GameCard';\nimport { Redirect } from 'react-router-dom';\nimport { StoreContext } from '../../utils/store';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { IconContext } from 'react-icons/lib';\nimport { Main } from '../../styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst DashboardPage = () => {\n  const context = useContext(StoreContext);\n  const [games, setGames] = useState([]);\n  const [gameDelete, setGameDelete] = useState(false);\n  const [addingNewGame, setAddingNewGame] = useState(false);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n  const [hover, setHover] = useState(false);\n\n  // api call functions\n  const getGames = async () => {\n    const response = await api.makeAPIRequest('admin/quiz', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json.quizzes;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  // set up games state\n  useEffect(async () => {\n    if (localStorage.getItem('token')) {\n      const gs = await getGames();\n      setGames(gs);\n    }\n  }, [gameDelete, addingNewGame]);\n\n  if (!localStorage.getItem('token')) {\n    console.log('not logged in');\n    return (\n      <Redirect to='/login' />\n    );\n  } else {\n    if (addingNewGame) {\n      return (\n        <Redirect to='/newgame' />\n      );\n    } else {\n      return (\n        <>\n          <section>\n            <Nav visibilities={['false', 'false', 'true', 'false', 'false']} />\n            <Main>\n              <div className={styles.topBar}>\n                <h3 label='my-games'>My Games</h3>\n                <IconContext.Provider\n                  value={{ className: styles.addGame }}>\n                  <Tooltip title=\"Add a new game\">\n                    <div>\n                      <BsFillPlusSquareFill\n                        label='add-game'\n                        fill={hover ? '#19aaee' : '#33bbff'}\n                        onMouseEnter={() => setHover(true)}\n                        onMouseLeave={() => setHover(false)}\n                        onClick={() => setAddingNewGame(true)}\n                      />\n                    </div>\n                  </Tooltip>\n                </IconContext.Provider>\n              </div>\n              <div className={styles.gameContainer}>\n                {games.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt)).map((quiz, idx) => {\n                  return (\n                    <GameCard\n                      key={idx}\n                      id={quiz.id}\n                      gameDelete={gameDelete}\n                      setGameDelete={setGameDelete}\n                    />\n                  );\n                })}\n              </div>\n            </Main>\n          </section>\n        </>\n      );\n    }\n  }\n};\n\nexport default DashboardPage;\n","// Route: '/newgame'\nimport React, { useContext, useState } from 'react';\nimport Nav from '../../components/Nav/Nav';\nimport TextInput from '../../components/TextInput/TextInput';\nimport styles from './NewGamePage.module.css';\nimport { useHistory } from 'react-router-dom';\nimport { StoreContext } from '../../utils/store';\n\nconst NewGamePage = () => {\n  const history = useHistory();\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n\n  const [titleInput, setTitleInput] = useState('');\n\n  const enter = (e) => {\n    if (e.key === 'Enter') {\n      confirm();\n    }\n  }\n\n  const confirm = async () => {\n    if (!titleInput) {\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Warning!',\n        modalBodyText: 'Quiz name can\\'t not be empty',\n        modalColors: 'warning',\n      }));\n    } else {\n      const response = await api.makeAPIRequest('admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify({\n          name: titleInput,\n        })\n      });\n      try {\n        const json = await response.json();\n        if (response.status === 200) {\n          history.push('/');\n        } else {\n          setModalStatus(status => ({\n            ...status,\n            modalActive: true,\n            overlayActive: true,\n            modalHeaderText: 'Error',\n            modalBodyText: json.error,\n            modalColors: 'error',\n          }));\n        }\n      } catch (e) {\n        console.log('ERROR', e);\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: 'Sorry! Can\\' connect to the server.',\n          modalColors: 'error',\n        }));\n      }\n    }\n  }\n\n  return (\n    <section>\n      <Nav\n        visibilities={['false', 'false', 'false', 'true', 'true']}\n        exit={() => history.push('/')}\n        confirm={confirm}\n      />\n      <div className={styles.main}>\n      <h2>Add a new game</h2>\n        <TextInput\n          label=\"Name\"\n          name='new-game'\n          value={titleInput}\n          onKeyDown={enter}\n          onChange={e => setTitleInput(e.target.value)} />\n      </div>\n    </section>\n  );\n};\n\nexport default NewGamePage;\n","import React, { useContext, useEffect, useState } from 'react';\nimport styles from './Modal.module.css';\nimport { StoreContext } from '../../utils/store';\n\nconst Modal = () => {\n  const context = useContext(StoreContext);\n  const [modalStatus, setModalStatus] = context.modalStatus;\n  // const [, setOverlayActive] = context.overlayActive;\n  // const [modalActive, setModalActive] = context.modalActive;\n  // const [modalHeaderText, setModalHeaderText] = context.modalHeaderText;\n  // const [modalBodyText, setModalBodyText] = context.modalBodyText;\n  const errorColors = { background: '#f8d7da', border: '#f5c2c7', text: '#842029' };\n  const warningColors = { background: '#fff3cd', border: '#ffecb5', text: '#664d03' };\n  const successColors = { background: '#d1e7dd', border: '#badbcc', text: '#0f5132' };\n  const notificationColors = { background: '#cfe2ff', border: '#b6d4fe', text: '#084298' };\n  const [colors, setColors] = useState({\n    background: 'white', border: 'black', text: 'black'\n  });\n  const closeModal = () => {\n    setModalStatus(status => ({\n      ...status,\n      modalActive: false,\n      overlayActive: false,\n      modalHeaderText: '',\n      modalBodyText: '',\n      modalColors: '',\n    }));\n  };\n  useEffect(() => {\n    switch (modalStatus.modalColors) {\n      case 'error':\n        setColors(errorColors);\n        break;\n      case 'warning':\n        setColors(warningColors);\n        break;\n      case 'success':\n        setColors(successColors);\n        break;\n      case 'notification':\n        setColors(notificationColors);\n        break;\n      default:\n        break;\n    }\n  }, [modalStatus]);\n  useEffect(() => {\n    const escape = (e) => {\n      if (e.key === 'Escape') {\n        closeModal();\n      }\n    }\n    window.addEventListener('keyup', (e) => escape(e));\n    return () => {\n      window.removeEventListener('keyup', (e) => escape(e));\n    }\n  }, []);\n  return (\n    <div className={modalStatus.modalActive ? styles.modalActive : styles.modalHidden} >\n      <div\n        className={styles.header}\n        style={{\n          backgroundColor: colors.background,\n          borderColor: colors.border,\n          color: colors.text,\n        }}>\n        <div\n          data-test-target='modal-header'\n          className={styles.title}\n        >\n          {modalStatus.modalHeaderText}\n        </div>\n        <button\n          aria-label='close-modal'\n          className={styles.closeButton}\n          onClick={closeModal}\n        >&times;</button>\n      </div>\n      <div className={styles.body}>\n        <div className={styles.text}>\n          {modalStatus.modalBodyText}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useContext } from 'react';\nimport { StoreContext } from '../../utils/store';\nimport styles from './Overlay.module.css';\n\nconst Overlay = () => {\n  const context = useContext(StoreContext);\n  const [modalStatus, setModalStatus] = context.modalStatus;\n  return (\n      <div\n        className={modalStatus.overlayActive ? styles.overlayActive : styles.overlayHidden}\n        onClick={() => {\n          setModalStatus(status => ({\n            ...status,\n            overlayActive: false,\n            modalActive: false,\n          }));\n        }}\n      ></div>\n  );\n};\n\nexport default Overlay;\n","import React, { useContext } from 'react';\nimport styles from './QuestionCard.module.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { PrimaryButton, SecondaryButton } from '../Buttons/Buttons';\nimport { StoreContext } from '../../utils/store';\nimport { BsCardImage } from 'react-icons/bs';\n\nconst QuestionCard = (props) => {\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n\n  // api call functions\n  const deleteQuestion = async () => {\n    const newQuestions = [...props.quiz.questions];\n    newQuestions.splice(props.id, 1);\n    const response = await api.makeAPIRequest(`admin/quiz/${props.quizid}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({\n        questions: newQuestions,\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        console.log('Delete question ', props.id);\n        props.updateDelete(!props.delete);\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  return (\n    <div className={styles.card}>\n      <h4 className={styles.title}>{`Question ${props.id + 1}`}</h4>\n      <p className={styles.question}>{props.question.qString}</p>\n      {props.question.mediaType === 'img'\n        ? <>\n          {!props.question.img\n            ? <div\n                className={styles.mediaContainer}\n              >\n              <BsCardImage className={styles.icon} />\n              </div>\n            : <div className={styles.mediaContainer}>\n              <img\n                className={styles.image}\n                style={{ backgroundColor: '#f0f0f0' }}\n                src={props.question.img}\n                alt={`question ${props.id} thumbnail`}\n              />\n              </div>\n          }\n          </>\n        : <>\n          {!props.question.video\n            ? <div\n                className={styles.mediaContainer}\n              >\n              <BsCardImage className={styles.icon} />\n              </div>\n            : <div className={styles.mediaContainer}>\n                <iframe\n                  className={styles.image}\n                  src={props.question.video}\n                  title=\"YouTube video player\"\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen>\n                </iframe>\n              </div>\n          }\n          </>\n      }\n\n      <div className={styles.buttons}>\n        <Link to={`/game/${props.quizid}/${props.id}`}>\n          <PrimaryButton\n            className={styles.button}\n          >\n            <span>Edit</span>\n          </PrimaryButton>\n        </Link>\n        <SecondaryButton\n          className={styles.button}\n          onClick={deleteQuestion}\n        >\n          <span>Delete</span>\n        </SecondaryButton>\n      </div>\n    </div>\n  );\n};\n\nQuestionCard.propTypes = {\n  quizid: PropTypes.string,\n  id: PropTypes.number,\n  delete: PropTypes.bool,\n  updateDelete: PropTypes.func,\n  quiz: PropTypes.object,\n  title: PropTypes.string,\n  question: PropTypes.object,\n};\n\nexport default QuestionCard;\n","// Route: '/game/:gameid'\nimport React, { useContext, useEffect, useState } from 'react';\nimport Nav from '../../components/Nav/Nav';\nimport styles from './EditGamePage.module.css';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\nimport { StoreContext } from '../../utils/store';\nimport { BaseButton, PrimaryButton } from '../../components/Buttons/Buttons';\nimport QuestionCard from '../../components/QuestionCard/QuestionCard';\nimport { FiEdit } from 'react-icons/fi';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst EditGamePage = () => {\n  const { gameid } = useParams();\n  const history = useHistory();\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n  const [added, setAdded] = useState(false);\n  const [deleted, setDeleted] = useState(false);\n  const [toEdit, setToEdit] = useState(false);\n  const [name, setName] = useState('');\n  const [quiz, setQuiz] = useState({\n    id: 0,\n    name: '',\n    questions: [],\n  })\n\n  // api call functions\n  const addQuestion = async () => {\n    const newQuestions = [...quiz.questions];\n    newQuestions.push({\n      qString: '',\n      type: 'Single',\n      timeLimit: '0',\n      point: '0',\n      answers: ['', ''],\n      mediaType: '',\n      correctAnswers: [true, false, false, false, false, false],\n      img: '',\n      video: '',\n    });\n    const response = await api.makeAPIRequest(`admin/quiz/${gameid}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({\n        questions: newQuestions,\n        thumbnail: '',\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        console.log('add a new question');\n        console.log(quiz);\n        setAdded(!added);\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n  const getGame = async () => {\n    const response = await api.makeAPIRequest(`admin/quiz/${gameid}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const updateGameName = async () => {\n    const response = await api.makeAPIRequest(`admin/quiz/${gameid}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({\n        name,\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        setToEdit(false);\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n  // set up quiz state\n  useEffect(async () => {\n    if (localStorage.getItem('token')) {\n      const q = await getGame();\n      setQuiz(q);\n      setName(q.name);\n      console.log(q);\n    }\n  }, [added, deleted, toEdit]);\n\n  if (!localStorage.getItem('token')) {\n    return (\n      <Redirect to='/' />\n    );\n  } else {\n    return (\n      <>\n        <Nav\n          visibilities={['false', 'false', 'false', 'false', 'true']}\n          confirm={() => history.push('/')}\n        />\n        <section className={styles.main}>\n          <div className={styles.topBar}>\n            {!toEdit\n              ? <>\n                <h3>\n                  {quiz.name}\n                  <Tooltip title=\"Edit game name\">\n                    <span className={styles.editIcon}>\n                      <FiEdit\n                        onClick={() => setToEdit(true)}\n                      />\n                    </span>\n                  </Tooltip>\n                </h3>\n              </>\n              : <div className={styles.inputContainer}>\n                <input\n                  className={styles.nameInput}\n                  type='text'\n                  value={name}\n                  onChange={e => setName(e.target.value)}\n                />\n                <BaseButton\n                  onClick={updateGameName}\n                >\n                  OK\n                  </BaseButton>\n              </div>\n            }\n            <PrimaryButton\n              onClick={addQuestion}\n            >Add a question</PrimaryButton>\n          </div>\n          <div className={styles.questionContainer}>\n            {quiz.questions.map((q, idx) => {\n              return (\n                <QuestionCard\n                  key={idx}\n                  id={idx}\n                  quizid={gameid}\n                  title={q.name}\n                  quiz={quiz}\n                  question={q}\n                  delete={deleted}\n                  updateDelete={setDeleted}\n                  thumbnail={quiz.questions[idx].img}\n                />\n              );\n            })}\n          </div>\n        </section>\n      </>\n    );\n  }\n};\n\nexport default EditGamePage;\n","import styled from 'styled-components';\n\nconst imageLarge = '400px';\nconst imageMedium = '300px';\nconst imageSmall = '250px';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nexport const QuestionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  align-items: center;\n  border-right: solid 1px #cccccc;\n  @media screen and (max-width: 600px) {\n    border-right: none;\n  }\n`;\n\nexport const QuestionIuputContainer = styled.div`\n  width: 90%;\n`;\n\nexport const VideoContainer = styled.iframe`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const OptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 300px;\n  align-items: center;\n`;\n\nexport const OptionInnerContainer = styled.div`\n  width: 230px;\n  margin: 10px 0;\n\n  & h4 {\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n`;\n\nexport const AnswerFieldContainer = styled.div`\n  max-width: 680px;\n  margin: 20px;\n`;\n\nexport const AnswerOuterContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media screen and (max-width: 700px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const AnswerContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 250px;\n  justify-content: center;\n`;\n\nexport const CheckBoxContainer = styled.div`\n  padding-top: 15px;\n  margin-left: -20px;\n  \n`;\nexport const RadioContainer = styled.div`\n  padding-top: 15px;\n  margin-left: -30px;\n  \n`;\n\nexport const AddImageContainer = styled.div`\n  border: dashed 5px #e9e9e9;\n  width: ${imageLarge};\n  height: ${imageLarge};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  @media screen and (max-width: 600px) {\n    width: ${imageMedium};\n    height: ${imageMedium};\n  }\n  @media screen and (min-width: 601px) and (max-width: 900px) {\n    width: ${imageSmall};\n    height: ${imageSmall};\n  }\n`;\n\nexport const AddImageContainerNoBorder = styled(AddImageContainer)`\n  border: none;\n  flex-direction: column;\n`;\n\nexport const Image = styled.img`\n  width: ${imageLarge};\n  @media screen and (max-width: 600px) {\n    width: ${imageMedium};\n  }\n  @media screen and (min-width: 601px) and (max-width: 900px) {\n    width: ${imageSmall};\n  }\n`;\n","// Route: '/game/:gameid/:qid'\nimport React, { useContext, useEffect, useState } from 'react';\nimport Nav from '../../components/Nav/Nav';\nimport { fileToDataUrl } from '../../utils/helpers';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\nimport { ImCross } from 'react-icons/im';\nimport { Main } from '../../styles';\nimport {\n  AddImageContainer, AddImageContainerNoBorder,\n  Image, QuestionContainer, QuestionIuputContainer,\n  OptionContainer, MainContainer, AnswerContainer,\n  CheckBoxContainer, AnswerOuterContainer, OptionInnerContainer,\n  RadioContainer, AnswerFieldContainer, VideoContainer\n} from './EditQuestionPage.styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextInput from '../../components/TextInput/TextInput';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { StoreContext } from '../../utils/store';\nimport { BiImageAdd } from 'react-icons/bi';\n\nconst EditQuestionPage = () => {\n  const history = useHistory();\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n  const { gameid, qid } = useParams();\n\n  // materail ui styles\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 230,\n      display: 'flex',\n      flexDirection: 'column',\n    }\n  }));\n  const classes = useStyles();\n\n  // react icon styles\n  const addImageIconStyles = {\n    width: '200px',\n    height: '200px',\n    color: '#e9e9e9',\n    cursor: 'pointer',\n  };\n  const removeButtonStyles = {\n    backgroundColor: '#e9e9e9',\n    padding: '5px',\n    fontSize: '1.2em',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    minWidth: '0',\n  };\n\n  // question content states\n  const [type, setType] = useState('Single');\n  const [qString, setQString] = useState('');\n  const [timeLimit, setTimeLimit] = useState('0');\n  const [point, setPoint] = useState('0');\n  const [numberOfAnswers, setNumberOfAnswers] = useState('2');\n  const [answers, setAnswers] = useState([]);\n  const [correctAnswers, setCorrectAnswers] = useState([true, false, false, false, false, false]);\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n  const [mediaType, setMediaType] = useState('');\n  const [quiz, setQuiz] = useState({});\n  const [edited, setEdited] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n  const [videoUrl, setVideoUrl] = useState('');\n\n  // api call functions\n  const updateQuestion = async () => {\n    const question = {\n      qString,\n      type,\n      timeLimit: parseInt(timeLimit, 10),\n      point: parseInt(point, 10),\n      answers,\n      mediaType,\n      correctAnswers,\n      img: imageSrc,\n      video: videoUrl,\n    };\n    console.log(question);\n    const newQuestions = [...quiz.questions];\n    newQuestions[qid] = question;\n    const response = await api.makeAPIRequest(`admin/quiz/${gameid}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({\n        questions: newQuestions,\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        setEdited(true);\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const getQuiz = async () => {\n    const response = await api.makeAPIRequest(`admin/quiz/${gameid}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  }\n\n  // answers/correct answers state control functions\n  const updateAnswers = (value, idx) => {\n    const newAnswers = [...answers];\n    newAnswers[idx] = value;\n    setAnswers(newAnswers);\n  }\n  const updateCorrectAnswer = (e) => {\n    setCorrectAnswer(parseInt(e.target.value, 10));\n    const newCorrectAnswers = [...correctAnswers];\n    for (let i = 0; i < numberOfAnswers; i++) {\n      newCorrectAnswers[i] = false;\n    }\n    newCorrectAnswers[e.target.value] = true;\n    setCorrectAnswers(newCorrectAnswers);\n    console.log(correctAnswers);\n    console.log(typeof correctAnswer);\n  };\n\n  const updateCorrectAnswers = (e, idx) => {\n    const newCorrectAnswers = [...correctAnswers];\n    newCorrectAnswers[idx] = e.target.checked;\n    console.log('correct answers', newCorrectAnswers);\n    setCorrectAnswers(newCorrectAnswers);\n  };\n\n  // image/video state control functions\n  const updateImageSrc = async (e) => {\n    const src = await fileToDataUrl(e.target.files[0]);\n    console.log(e.target.files);\n    setImageSrc(src);\n  };\n  const removeImage = () => {\n    setImageSrc('')\n  };\n  const updateVideoUrl = (e) => {\n    const newUrl = e.target.value.replace('watch?v=', 'embed/');\n    setVideoUrl(newUrl);\n  };\n\n  // answers/correct answers state control triggers\n  useEffect(async () => {\n    const q = await getQuiz();\n    const a = q.questions[qid].answers;\n    const c = q.questions[qid].correctAnswers;\n    console.log(c);\n    const newAnswers = [];\n    for (let i = 0; i < numberOfAnswers; i++) {\n      newAnswers.push(a[i] || '');\n    }\n    setAnswers(newAnswers);\n    const newCorrectAnswers = [];\n    for (let i = 0; i < numberOfAnswers; i++) {\n      newCorrectAnswers[i] = c[i] || false;\n    }\n    setCorrectAnswers(newCorrectAnswers);\n  }, [numberOfAnswers]);\n\n  // set up initial state\n  useEffect(async () => {\n    const q = await getQuiz();\n    setQuiz(q);\n    const qData = q.questions[qid];\n    console.log(qData);\n    setQString(qData.qString);\n    setType(qData.type);\n    setTimeLimit(qData.timeLimit ? qData.timeLimit.toString() : '');\n    setPoint(qData.point.toString());\n    setMediaType(qData.mediaType);\n    setNumberOfAnswers(qData.answers.length);\n    const newAnswers = [...answers];\n    qData.answers.forEach((ans, idx) => { newAnswers[idx] = ans; });\n    setAnswers(newAnswers);\n    console.log(qData.correctAnswers);\n    setCorrectAnswers(qData.correctAnswers);\n    for (const idx in qData.correctAnswers) {\n      if (qData.correctAnswers[idx]) {\n        setCorrectAnswer(parseInt(idx, 10));\n      }\n    }\n    setImageSrc(qData.img);\n    setVideoUrl(qData.video);\n  }, []);\n\n  if (edited) {\n    return <Redirect to={'/game/' + gameid} />\n  }\n\n  return (\n    <>\n      <section>\n        <Nav\n          visibilities={['false', 'false', 'false', 'true', 'true']}\n          exit={() => history.push('/game/' + gameid)}\n          confirm={updateQuestion}\n        />\n        <Main>\n          <MainContainer>\n            <QuestionContainer>\n              <QuestionIuputContainer>\n                <TextField\n                  placeholder=\"Type your question\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  value={qString}\n                  onChange={e => setQString(e.target.value)}\n                />\n              </QuestionIuputContainer>\n              {mediaType &&\n                <>\n                {mediaType === 'img'\n                  ? <>\n                    {imageSrc\n                      ? <AddImageContainerNoBorder>\n                          <Image src={imageSrc} alt={qString} />\n                          <ImCross\n                            style={removeButtonStyles}\n                            onClick={removeImage}\n                          />\n                        </AddImageContainerNoBorder>\n                      : <AddImageContainer>\n                        <label htmlFor='add-image'>\n                          <BiImageAdd style={addImageIconStyles} />\n                        </label>\n                        <input\n                          type='file'\n                          id='add-image'\n                          file={imageSrc}\n                          // value={imageSrc}\n                          onChange={updateImageSrc}\n                          hidden />\n                      </AddImageContainer>\n                    }\n                  </>\n                  : <AddImageContainerNoBorder>\n                    <VideoContainer\n                      src={videoUrl}\n                      title=\"YouTube video player\"\n                      frameBorder=\"0\"\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen>\n                    </VideoContainer>\n                  </AddImageContainerNoBorder>\n                }\n                </>\n              }\n\n              <AnswerFieldContainer>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                  <AnswerOuterContainer>\n                    {answers.map((ans, idx) => (\n                      <AnswerContainer key={idx}>\n                        <div>\n                          <TextInput\n                            label={`Answer ${idx + 1}`}\n                            value={ans}\n                            onChange={e => updateAnswers(e.target.value, idx)}\n                          />\n                        </div>\n                        { type === 'Multiple'\n                          ? <CheckBoxContainer>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={correctAnswers[idx] || false}\n                                  onChange={e => updateCorrectAnswers(e, idx)}\n                                />}\n                            />\n                          </CheckBoxContainer>\n                          : <RadioContainer>\n                            <Radio\n                              checked={correctAnswer === idx}\n                              onChange={updateCorrectAnswer}\n                              value={idx}\n                              name=\"correct-answer-radio\"\n                            />\n                          </RadioContainer>\n                        }\n                      </AnswerContainer>\n                    ))}\n                  </AnswerOuterContainer>\n\n                </FormControl>\n              </AnswerFieldContainer>\n            </QuestionContainer>\n            <OptionContainer>\n              <OptionInnerContainer>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component='legend'>Media Type</FormLabel>\n                  <RadioGroup aria-label='media type' name='media' value={mediaType} onChange={e => setMediaType(e.target.value)}>\n                    <FormControlLabel value='img' control={<Radio />} label='Image' />\n                    <FormControlLabel value='video' control={<Radio />} label='Video' />\n                  </RadioGroup>\n                </FormControl>\n              </OptionInnerContainer>\n              {mediaType === 'video' &&\n                <OptionInnerContainer>\n                  <TextInput\n                    label='Youtube Video (copy the URL)'\n                    value={videoUrl}\n                    onChange={updateVideoUrl}\n                  />\n                </OptionInnerContainer>\n              }\n              <OptionInnerContainer>\n                <TextInput\n                  label='Time limit'\n                  value={timeLimit}\n                  onChange={e => setTimeLimit(e.target.value)}\n                />\n              </OptionInnerContainer>\n              <OptionInnerContainer>\n                <TextInput\n                  label='Point'\n                  value={point}\n                  onChange={e => setPoint(e.target.value)}\n                />\n              </OptionInnerContainer>\n              <OptionInnerContainer>\n                <FormControl className={classes.formControl}>\n                  <InputLabel id='type-select-label'>Question Type</InputLabel>\n                  <Select\n                    labelId='type-select-label'\n                    id='type-select'\n                    value={type}\n                    onChange={(e) => setType(e.target.value)}\n                  >\n                    <MenuItem value={'Multiple'}>Multiple choice</MenuItem>\n                    <MenuItem value={'Single'}>Single choice</MenuItem>\n                  </Select>\n                </FormControl>\n              </OptionInnerContainer>\n              <OptionInnerContainer>\n                <FormControl className={classes.formControl}>\n                  <InputLabel id='answers-select-label'>Number of Answers</InputLabel>\n                  <Select\n                    labelId='answers-select-label'\n                    id='answers-select'\n                    value={numberOfAnswers}\n                    onChange={(e) => setNumberOfAnswers(e.target.value)}\n                  >\n                    <MenuItem value={2}>2</MenuItem>\n                    <MenuItem value={3}>3</MenuItem>\n                    <MenuItem value={4}>4</MenuItem>\n                    <MenuItem value={5}>5</MenuItem>\n                    <MenuItem value={6}>6</MenuItem>\n                  </Select>\n                </FormControl>\n              </OptionInnerContainer>\n            </OptionContainer>\n          </MainContainer>\n        </Main>\n      </section>\n    </>\n  );\n};\n\nexport default EditQuestionPage;\n","import styled from 'styled-components';\nimport { BsInfoCircle } from 'react-icons/bs';\n\nexport const MyInfoCircle = styled(BsInfoCircle)`\n  transform: translateY(20%);\n  margin-left: 5px;\n  color: #19aaee;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\nimport { Main } from '../../styles';\nexport const PageTitle = styled.h1`\n  margin-block-end: 0;\n`;\n\nexport const CharContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media screen and (max-width: 800px) {\n    flex-direction: column;\n  }\n`;\nexport const MainContainer = styled(Main)`\n  padding: 20px;\n`;\n","// Route: '/game/result/:sessionid'\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { MyInfoCircle } from '../PlayResultPage/PlayResultPage.styles';\nimport Nav from '../../components/Nav/Nav';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Chart,\n  BarSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport { StoreContext } from '../../utils/store';\nimport { CharContainer, PageTitle, MainContainer } from './ResultPage.styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nconst ResultPage = () => {\n  const { sessionid } = useParams();\n  const context = useContext(StoreContext);\n  const history = useHistory();\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n\n  // results state\n  const [results, setResults] = useState([]);\n  const [scores, setScores] = useState([]);\n  const [points, setPoints] = useState([]);\n  const [averageTimeTakenByQuestion, setAverageTimeTakenByQuestion] = useState([]);\n  const [percentOfPeopleCorrectByQuestion, setPercentOfPeopleCorrectByQuestion] = useState([]);\n\n  // material ui styles\n  const useStyles = makeStyles(() => ({\n    tableContainer: {\n      margin: 20,\n      minWidth: 350,\n      maxWidth: 650,\n    },\n    table: {\n      minWidth: 350,\n      maxWidth: 650,\n      width: '90%',\n      margin: '0 auto',\n      '& th': {\n        fontSize: '1.2em',\n        fontWeight: 'bold',\n      },\n      '& td': {\n        fontSize: '1em',\n      },\n    },\n    chart: {\n      margin: '20px',\n    }\n  }));\n  const InfoTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: '#333333',\n      maxWidth: 250,\n      fontSize: theme.typography.pxToRem(14),\n      border: '1px solid #dadde9',\n    },\n  }))(Tooltip);\n  const classes = useStyles();\n  // graph format\n  const format = scale => scale.tickFormat(null, '%');\n\n  // api call functions\n  const getResults = async () => {\n    const response = await api.makeAPIRequest(`admin/session/${sessionid}/results`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json.results;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  // results set up\n  useEffect(async () => {\n    const newResults = await getResults();\n    setResults(newResults);\n    const newScores = [];\n    const newPoints = [];\n    const newTotalTimeTaken = [];\n    const newNumOfPeopleCorrectByQuestion = [];\n    newResults.forEach((player, idx) => {\n      let score = 0;\n      let newAnsPoints = 0;\n      console.log(player.name);\n      console.log(player.answers);\n      player.answers.forEach((ans, idx) => {\n        const timeTaken = (new Date(ans.answeredAt) - new Date(ans.questionStartedAt)) / 1000;\n        if (!newTotalTimeTaken[idx]) {\n          newTotalTimeTaken[idx] = {\n            question: idx + 1 + '',\n            time: timeTaken\n          };\n        } else {\n          newTotalTimeTaken[idx].time += timeTaken;\n        }\n        if (ans.correct) {\n          score++;\n          newAnsPoints += Math.round(ans.questionPoints * (1 - (timeTaken / (ans.questionDuration - 0.5))));\n          if (!newNumOfPeopleCorrectByQuestion[idx]) {\n            newNumOfPeopleCorrectByQuestion[idx] = {\n              question: idx + 1 + '',\n              numberOfPeopleCorrect: 1,\n            };\n          } else {\n            newNumOfPeopleCorrectByQuestion[idx].numberOfPeopleCorrect++;\n          }\n        } else {\n          if (!newNumOfPeopleCorrectByQuestion[idx]) {\n            newNumOfPeopleCorrectByQuestion[idx] = {\n              question: idx + 1 + '',\n              numberOfPeopleCorrect: 0,\n            };\n          }\n        }\n      });\n      newScores.push(score);\n      newPoints.push(newAnsPoints);\n    });\n    const newAverageTimeTaken = newTotalTimeTaken.map(t => ({\n      question: t.question,\n      time: t.time / newResults.length\n    }));\n    setAverageTimeTakenByQuestion(newAverageTimeTaken);\n    setScores(newScores);\n    setPoints(newPoints);\n    const newPercentOfPeopleCorrectByQuestion = newNumOfPeopleCorrectByQuestion.map(n => ({\n      question: n.question,\n      percentage: n.numberOfPeopleCorrect / newResults.length\n    }));\n    setPercentOfPeopleCorrectByQuestion(newPercentOfPeopleCorrectByQuestion);\n  }, []);\n\n  return (\n    <section>\n      <Nav\n        visibilities={['false', 'false', 'false', 'true', 'false']}\n        exit={() => history.push('/')}\n      />\n      <MainContainer >\n        <PageTitle>Game results</PageTitle>\n        <p>session {sessionid}</p>\n        <TableContainer component={Paper} className={classes.tableContainer}>\n          <Table className={classes.table} aria-label=\"performance-table\">\n            <caption>Player Performance</caption>\n            <TableHead>\n              <TableRow>\n                <TableCell align='center'>Player</TableCell>\n                <TableCell align='center'>Score</TableCell>\n                <TableCell align='center'>\n                  Points\n                  <InfoTooltip title={\n                                  <>\n                                    <Typography color='inherit'>Points scored are the product of the percentage of time left and total points of the question.</Typography>\n                                    <em><b>{'Equation: '}</b>{'points = (1 - (time taken/duration)) * total points'}</em><br/>\n                                    <span>{'Total points scored is the sum of points scored of all questions'}</span>\n                                  </>\n                                }>\n                    <span>\n                      <MyInfoCircle />\n                    </span>\n                  </InfoTooltip>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {points &&\n                <>\n                {points.sort((a, b) => b - a).slice(0, 5).map((p, idx) => (\n                  <TableRow key={results[idx].name}>\n                    <TableCell align='center'>\n                      {results[idx].name}\n                    </TableCell>\n                    <TableCell align='center'>{`${scores[idx]} out of ${results[idx].answers.length}`}</TableCell>\n                    <TableCell align='center'>{`${p}/${results[idx].answers.reduce((accumulator, currentValue) => accumulator + currentValue.questionPoints, 0)}`}</TableCell>\n                  </TableRow>\n                ))}\n                </>\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <CharContainer>\n          <Paper className={classes.chart}>\n            <Chart\n              data={percentOfPeopleCorrectByQuestion}\n              label='Percentage-of-People-Correct-by-Question'\n            >\n              <ArgumentAxis />\n              <ValueAxis tickFormat={format} />\n\n              <BarSeries\n                valueField=\"percentage\"\n                argumentField=\"question\"\n              />\n              <Title text=\"Percentage of People Correct by Question\" />\n              <Animation />\n            </Chart>\n          </Paper>\n          <Paper className={classes.chart}>\n            <Chart\n              data={averageTimeTakenByQuestion}\n              label='Average-Time-Taken-by-Question'\n            >\n              <ArgumentAxis />\n              <ValueAxis />\n              <BarSeries\n                valueField=\"time\"\n                argumentField=\"question\"\n              />\n              <Title text=\"Average Time Taken by Question\" />\n              <Animation />\n            </Chart>\n          </Paper>\n        </CharContainer>\n      </MainContainer>\n    </section>\n  );\n};\n\nexport default ResultPage;\n","// Route: '/play/join/:sessionid/:gameid'\nimport React, { useContext, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Main } from '../../styles';\nimport Nav from '../../components/Nav/Nav';\nimport TextInput from '../../components/TextInput/TextInput';\nimport { StoreContext } from '../../utils/store';\n\nconst JoinPage = () => {\n  const { sessionid, gameid } = useParams();\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n  const history = useHistory();\n\n  const [sessionId, setSessionId] = useState(sessionid);\n  const [name, setName] = useState('');\n\n  // press Enter key to join session\n  const enter = (e) => {\n    if (e.key === 'Enter') {\n      joinSession();\n    }\n  }\n\n  // api call function\n  const joinSession = async () => {\n    console.log(name + ' join session ' + sessionId);\n    if (name === '') {\n      setModalStatus((status) => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Warning!',\n        modalBodyText: 'Sorry, player name can\\'t be empty',\n        modalColors: 'warning',\n      }));\n    } else {\n      const response = await api.makeAPIRequest(`play/join/${sessionid}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name,\n        }),\n      });\n      try {\n        const json = await response.json();\n        if (response.status === 200) {\n          console.log(json);\n          history.push(`/lobby/${sessionid}/${gameid}/${json.playerId}`);\n        } else {\n          setModalStatus((status) => ({\n            ...status,\n            modalActive: true,\n            overlayActive: true,\n            modalHeaderText: 'Error',\n            modalBodyText: json.error,\n            modalColors: 'error',\n          }));\n        }\n      } catch (e) {\n        console.log('ERROR', e);\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: 'Sorry! Can\\' connect to the server.',\n          modalColors: 'error',\n        }));\n      }\n    }\n  };\n\n  return (\n    <section>\n      <Nav\n        visibilities={['false', 'false', 'false', 'true', 'true']}\n        exit={() => history.push('/')}\n        confirm={joinSession}\n      />\n      <Main>\n        <p>Join session {sessionid}</p>\n        <div>\n          <TextInput\n            name='sessionId'\n            label=\"Session ID\"\n            value={sessionId}\n            onChange={(e) => setSessionId(e.target.value)}\n          />\n        </div>\n        <div>\n          <TextInput\n            name='playerName'\n            label=\"Player Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            onKeyDown={enter}\n          />\n        </div>\n      </Main>\n    </section>\n  );\n};\n\nexport default JoinPage;\n","import styled from 'styled-components';\nimport { Main } from '../../styles';\n\nconst imageLarge = '500px';\nconst imageMedium = '400px';\nconst imageSmall = '300px';\n\nexport const MainContainer = styled(Main)`\n  position: relative;\n`;\n\nexport const QuestionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const QuestionStringContainer = styled.div`\n  text-align: center;\n  & h1 {\n    font-size: 2em;\n    @media screen and (max-width: 600px) {\n      font-size: 1.5em;\n    }\n  }\n`;\n\nexport const QuestionAdminContainer = styled(QuestionStringContainer)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const MediaContainer = styled.div`\n  width: ${imageLarge};\n  height: ${imageMedium};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  overflow: hidden;  \n  @media screen and (max-width: 600px) {\n    width: ${imageSmall};\n    height: ${imageSmall};\n\n  }\n  @media screen and (min-width: 601px) and (max-width: 900px) {\n    width: ${imageMedium};\n    height: ${imageSmall};\n\n  }\n`;\n\nexport const Image = styled.img`\n  width: ${imageLarge};\n  @media screen and (max-width: 600px) {\n    width: ${imageSmall};\n  }\n  @media screen and (min-width: 601px) and (max-width: 900px) {\n    width: ${imageMedium};\n  }\n`;\n\nexport const AnswerAdminContainer = styled.div`\n  margin: 24px;\n`;\n\nexport const AnswerOuterContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media screen and (max-width: 700px) {\n    display: flex;\n    flex-direction: column;\n  }\n\n`;\nexport const AnswerContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 400px;\n  height: 100px;\n  margin: 3px;\n  align-items: center;\n  justify-content: space-around;\n  background-color: #f0f0f0;\n  border-radius: 4px;\n  @media screen and (max-width: 500px) {\n    width: 350px;\n  }\n  @media screen and (min-width: 501px) and (max-width: 700px) {\n    width: 450px;\n  }\n  @media screen and (min-width: 701px) and (max-width: 900px) {\n    width: 300px;\n  }\n`;\nexport const AnswerInnerContainer = styled.div`\n  width: 150px;\n  height: 50px;\n\n  text-align: left;\n  & span {\n    color: white;\n    line-height: 50px;\n    font-size: 1.5em;\n    font-weight: bold;\n  }\n`;\n\nexport const SelectionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const MyCountdown = styled.div`\n  position: absolute;\n  left: 20px;\n  top: 60px;\n  transform: translateY(-50%);\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  text-align: center;\n  background-color: #7d2ae8;\n  & p {\n    color: white;\n    font-weight: bold;\n    font-size: 4em;\n    margin: auto;\n    line-height: 100px;\n    @media screen and (max-width: 650px) {\n      font-size: 2em;\n      line-height: 50px;\n    }\n  }\n  @media screen and (max-width: 650px) {\n    width: 50px;\n    height: 50px;\n    left: 10px;\n    top: 30px;\n  }\n`;\n\nexport const ControlButton = styled.div`\n  margin-left: 10px;\n`;\n","// Route '/play/:sessionid/:gameid/:playerid'\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\nimport useInterval from 'use-interval';\nimport Countdown from 'react-countdown';\nimport Nav from '../../components/Nav/Nav';\nimport { StoreContext } from '../../utils/store';\nimport { ImCheckmark, ImCross } from 'react-icons/im';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { PrimaryButton } from '../../components/Buttons/Buttons';\nimport { VideoContainer } from '../EditQuestionPage/EditQuestionPage.styles';\nimport {\n  MainContainer, QuestionContainer,\n  QuestionStringContainer, ControlButton,\n  AnswerInnerContainer, AnswerContainer,\n  AnswerOuterContainer, AnswerAdminContainer,\n  SelectionContainer, QuestionAdminContainer,\n  MediaContainer, Image, MyCountdown\n} from './PlayGamePage.styles';\nimport Radio from '@material-ui/core/Radio';\n\n// material ui styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  checkboxLabel: {\n    margin: 0,\n  }\n}));\n\nconst WhiteCheckbox = withStyles({\n  root: {\n    color: 'white',\n    '&$checked': {\n      color: 'white'\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst WhiteRadio = withStyles({\n  root: {\n    color: 'white',\n    '&$checked': {\n      color: 'white'\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\n// react icon styles\nconst iconStyles = {\n  color: 'white',\n  fontSize: '1em',\n};\n\n// answer card backgrounds\nconst backgroundColors = ['rgb(226, 27, 60)', 'rgb(19, 104, 206)', 'rgb(216, 158, 0)', 'rgb(38, 137, 12)', '#7d2ae8', 'rgb(235, 103, 16)'];\n\nconst PlayGamePage = () => {\n  const { sessionid, playerid, gameid } = useParams();\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n  const history = useHistory();\n\n  // question states\n  const [question, setQuestion] = useState({});\n  const [results, setResults] = useState({});\n  const [submitAnswer, setSubmitAnswer] = useState('0');\n  const [submitAnswers, setSubmitAnswers] = useState([false, false, false, false, false, false]);\n  const [correctAnswers, setCorrectAnswers] = useState([]);\n\n  // admin control states\n  const [advanced, setAdvanced] = useState(0);\n  const [over, setOver] = useState(false);\n  const [stop, setStop] = useState(false);\n\n  const classes = useStyles();\n\n  // countdown init\n  const startTime = useRef(Date.now());\n  // Renderer callback with condition\n  const renderer = ({ seconds }) => {\n    return <MyCountdown><p>{seconds}</p></MyCountdown>;\n  };\n\n  // player submit answer control functions\n  const updateSubmitAnswers = async (e, idx) => {\n    const newSubmitAnswers = [...submitAnswers];\n    newSubmitAnswers[idx] = e.target.checked;\n    console.log(newSubmitAnswers);\n    setSubmitAnswers(newSubmitAnswers)\n    const submit = [];\n    newSubmitAnswers.forEach((ans, idx) => {\n      if (ans) {\n        submit.push(idx);\n      }\n    });\n    await answerQuestion(submit);\n  };\n\n  const updateSubmitAnswer = async (e) => {\n    setSubmitAnswer(parseInt(e.target.value, 10));\n    const newSubmitAnswers = [...submitAnswers];\n    for (let i = 0; i < question.answers.length; i++) {\n      newSubmitAnswers[i] = false;\n    }\n    newSubmitAnswers[e.target.value] = true;\n    setSubmitAnswers(newSubmitAnswers);\n    const submit = [];\n    newSubmitAnswers.forEach((ans, idx) => {\n      if (ans) {\n        submit.push(idx);\n      }\n    });\n    await answerQuestion(submit);\n  };\n\n  // api call functions\n  // player side\n  const answerQuestion = async (answers) => {\n    const response = await api.makeAPIRequest(`play/${playerid}/answer`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        answerIds: answers,\n      })\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        console.log('answers:', answers);\n      } else {\n        console.log(json.error);\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const getStatus = async () => {\n    const response = await api.makeAPIRequest(`play/${playerid}/status`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json.started;\n      } else {\n        console.log(json.error);\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const getQuestion = async () => {\n    const response = await api.makeAPIRequest(`play/${playerid}/question`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json.question;\n      } else {\n        setModalStatus((status) => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const getPlayerCorrectAnswers = async () => {\n    const response = await api.makeAPIRequest(`play/${playerid}/answer`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json.answerIds;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n  // admin side\n  const getAdminQuestions = async () => {\n    const response = await api.makeAPIRequest(`admin/session/${sessionid}/status`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json.results;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const advanceGame = async () => {\n    const response = await api.makeAPIRequest(`admin/quiz/${gameid}/advance`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        console.log('advanced');\n        setAdvanced(a => a + 1);\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  // admin control triggers\n  useEffect(async () => {\n    if (playerid === '0') {\n      const r = await getAdminQuestions();\n      setResults(r);\n      if (r.position === r.questions.length) {\n        setOver(true);\n      }\n    }\n  }, [advanced]);\n\n  // player poll for new quesiton or end of game\n  useInterval(\n    async () => {\n      if (playerid !== '0') {\n        const s = await getStatus();\n        if (s) {\n          const q = await getQuestion();\n          // reset the countdown\n          if (q.qString !== question.qString) {\n            setSubmitAnswer('');\n            setSubmitAnswers([false, false, false, false, false, false]);\n            setStop(false);\n            setModalStatus(status => ({\n              ...status,\n              modalActive: false,\n              overlayActive: false,\n            }));\n            startTime.current = Date.now();\n          }\n          setQuestion(q);\n        } else {\n          console.log(over);\n          setOver(true);\n          setModalStatus(status => ({\n            ...status,\n            modalActive: false,\n            overlayActive: false,\n          }));\n        }\n      }\n    },\n    500\n  );\n\n  // show each correct when time is up for a question\n  const isCorrect = (answers, corrects) => {\n    const submit = [];\n    answers.forEach((ans, idx) => {\n      if (ans) {\n        submit.push(idx);\n      }\n    })\n    if (corrects.length !== submit.length) {\n      return false;\n    }\n    for (let i = 0; i < submit.length; i++) {\n      if (corrects[i] !== submit[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const showCorrectAnswers = async () => {\n    setTimeout(async () => {\n      setStop(true);\n      const newCorrectAnswers = await getPlayerCorrectAnswers();\n      setCorrectAnswers(newCorrectAnswers);\n      console.log(newCorrectAnswers);\n      console.log(submitAnswers);\n      if (isCorrect(submitAnswers, newCorrectAnswers)) {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Correct!',\n          modalBodyText: 'Well done!',\n          modalColors: 'success',\n        }));\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Incorret',\n          modalBodyText: <>\n                          <p>Tough Quesiton!</p>\n                          <p>{`Correct Answer(s): ${newCorrectAnswers.map(ans => question.answers[ans])}`}</p>\n                        </>,\n          modalColors: 'error',\n        }));\n      }\n    }, 600);\n  };\n\n  return (\n    <section>\n      <Nav\n        visibilities={['false', 'false', 'false', 'true', 'false']}\n        exit={() => history.push('/')}\n      />\n      <MainContainer>\n        {playerid === '0'\n          // admin side\n          ? <>\n            {results.questions && results.position >= 0 && results.position < results.questions.length\n              ? <div className={classes.root}>\n                <QuestionContainer>\n                  <QuestionAdminContainer>\n\n                    <h1>{results.questions[results.position].qString}</h1>\n                    <ControlButton>\n                      <PrimaryButton\n                        onClick={advanceGame}\n                      >\n                        {results.position === results.questions.length - 1 ? 'End the game' : 'Next Question'}\n                      </PrimaryButton>\n                    </ControlButton>\n                  </QuestionAdminContainer>\n                  {results.questions[results.position].mediaType &&\n                    <>\n                      {results.questions[results.position].mediaType === 'img'\n                        ? <>\n                          {results.questions[results.position].img\n                            ? <MediaContainer>\n                              <Image src={results.questions[results.position].img} alt={results.questions[results.position].qString} />\n                            </MediaContainer>\n                            : <></>}\n                        </>\n                        : <MediaContainer>\n                          <VideoContainer\n                            src={results.questions[results.position].video}\n                            title=\"YouTube video player\"\n                            frameBorder=\"0\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen>\n                          </VideoContainer>\n                        </MediaContainer>\n                      }\n                    </>\n                  }\n                  <AnswerAdminContainer>\n                    <AnswerOuterContainer>\n                      {results.questions[results.position].answers.map((ans, idx) => (\n                        <AnswerContainer\n                          key={idx}\n                          style={{ backgroundColor: backgroundColors[idx] }}\n                        >\n                          <AnswerInnerContainer>\n                            <span>{ans}</span>\n                          </AnswerInnerContainer>\n                          {results.questions[results.position].correctAnswers[idx]\n                            ? <ImCheckmark style={iconStyles} />\n                            : <ImCross style={iconStyles} />\n                          }\n                        </AnswerContainer>\n                      ))}\n                    </AnswerOuterContainer>\n                  </AnswerAdminContainer>\n                </QuestionContainer>\n              </div>\n              : <p>Loading...</p>\n            }\n            {over && <Redirect to={`/game/result/${sessionid}`} />}\n          </>\n          // player side\n          : <>\n            {question.qString !== undefined\n              ? <div className={classes.root}>\n                <Countdown date={startTime.current + question.timeLimit * 1000}\n                  renderer={renderer}\n                  onComplete={showCorrectAnswers}\n                />\n                <QuestionContainer>\n                  <QuestionStringContainer>\n                    <h1>{question.qString}</h1>\n                  </QuestionStringContainer>\n                  {question.mediaType &&\n                    <>\n                      {question.mediaType === 'img'\n                        ? <>\n                          {question.img &&\n                            <MediaContainer>\n                              <Image src={question.img} alt={question.qString} />\n                            </MediaContainer>\n                          }\n                          </>\n                        : <MediaContainer>\n                            <VideoContainer\n                              src={question.video}\n                              title=\"YouTube video player\"\n                              frameBorder=\"0\"\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              allowFullScreen>\n                            </VideoContainer>\n                          </MediaContainer>\n                      }</>\n                  }\n                  <FormControl component=\"fieldset\" className={classes.formControl}>\n                    {question.type === 'Multiple'\n                      ? <FormGroup>\n                        <AnswerOuterContainer>\n                          {question.answers.map((ans, idx) => (\n                            <AnswerContainer\n                              key={idx}\n                              style={{\n                                backgroundColor: backgroundColors[idx],\n                                opacity: stop && (correctAnswers ? !correctAnswers.includes(idx) : true) ? 0.3 : 1,\n                              }}\n                            >\n                              <AnswerInnerContainer>\n                                <span>{ans}</span>\n                              </AnswerInnerContainer>\n                              {stop\n                                ? <>\n                                  {(correctAnswers ? correctAnswers.includes(idx) : true)\n                                    ? <ImCheckmark style={iconStyles} />\n                                    : <ImCross style={iconStyles} />\n                                  }</>\n                                : <SelectionContainer>\n                                  <FormControlLabel\n                                    className={classes.checkboxLabel}\n                                    control={\n                                      <WhiteCheckbox\n                                        disabled={stop}\n                                        checked={submitAnswers[idx]}\n                                        onChange={e => updateSubmitAnswers(e, idx)}\n                                        inputProps={{ 'aria-label': 'answer checkbox' }}\n                                      />}\n                                  />\n                                </SelectionContainer>\n                              }\n                            </AnswerContainer>\n                          ))}\n                        </AnswerOuterContainer>\n                      </FormGroup>\n                      : <AnswerOuterContainer>\n                        {question.answers.map((ans, idx) => (\n                          <AnswerContainer\n                            key={idx}\n                            style={{\n                              backgroundColor: backgroundColors[idx],\n                              opacity: stop && (correctAnswers ? !correctAnswers.includes(idx) : true) ? 0.3 : 1,\n                            }}\n                          >\n                            <AnswerInnerContainer>\n                              <span>{ans}</span>\n                            </AnswerInnerContainer>\n                            {stop\n                              ? <>\n                                {(correctAnswers ? correctAnswers.includes(idx) : true)\n                                  ? <ImCheckmark style={iconStyles} />\n                                  : <ImCross style={iconStyles} />\n                                }</>\n                              : <SelectionContainer>\n                                <WhiteRadio\n                                  disabled={stop}\n                                  checked={submitAnswer === idx}\n                                  onChange={updateSubmitAnswer}\n                                  value={idx}\n                                  name=\"choose-answer-radio\"\n                                  inputProps={{ 'aria-label': 'answer radio' }}\n                                />\n                              </SelectionContainer>}\n                          </AnswerContainer>\n                        ))}\n                      </AnswerOuterContainer>\n                    }\n                  </FormControl>\n                </QuestionContainer>\n              </div>\n              : <p>Loading...</p>\n            }\n            {over && <Redirect to={`/play/result/${playerid}`} />}\n          </>\n        }\n      </MainContainer>\n    </section>\n  );\n};\n\nexport default PlayGamePage;\n","import styled from 'styled-components';\nimport { Main } from '../../styles';\nimport { WhiteButton } from '../../components/Buttons/Buttons';\n\nexport const Container = styled.section`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(20deg,#512da8,#311b92  );\n`;\n\nexport const MainContainer = styled(Main)`\n  flex: 1;\n  background-color: transparent;\n  box-shadow: none;\n`;\n\nexport const TextContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  & h1 {\n    color: white;\n    font-size: 2.5em;\n    margin-block-end: 0.3em;\n  }\n  & p {\n    color: white;\n    font-weight: bold;\n  }\n`;\n\nexport const PlayerContainer = styled(TextContainer)`\n  flex-direction: row;\n  max-width: 680px;\n  flex-wrap: wrap;\n`;\n\nexport const StartButton = styled(WhiteButton)`\n  position: absolute;\n  top: 80px;\n  right: 20px;\n`;\n\nexport const NameContainer = styled.div`\n  min-width: 100px;\n  width: fit-content;\n  height: 50px;\n  background-color: #311b92;\n  text-align: center;\n  padding: 0 10px;\n  margin: 20px;\n  & span {\n    color: white;\n    font-size: 1.5em;\n    font-weight: bold;\n    line-height: 50px;\n  }\n\n`;\n\nexport const PlayerNum = styled(NameContainer)`\n  position: absolute;\n  top: 80px;\n  left: 20px;\n  height: 40px;\n  min-width: 50px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 0;\n  justify-content: center;\n  & span {\n    line-height: 40px;\n    margin: 2px;\n    & svg {\n      transform: translateY(10%);\n    }\n  }\n`;\n","// Route: '/lobby/:sessionid/:gameid/:playerid'\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Nav from '../../components/Nav/Nav';\nimport {\n  MainContainer, Container, TextContainer,\n  StartButton, NameContainer, PlayerNum,\n  PlayerContainer\n} from './LobbyPage.styles';\nimport useInterval from 'use-interval';\nimport { BsPersonFill } from 'react-icons/bs';\nimport { StoreContext } from '../../utils/store';\n\nconst LobbyPage = () => {\n  const { sessionid, gameid, playerid } = useParams();\n  const context = useContext(StoreContext);\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n  const history = useHistory();\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [advanced, setAdvanced] = useState(false);\n\n  // admin results state\n  const [results, setResults] = useState({});\n\n  // api call functions\n  const getAdminStatus = async () => {\n    const response = await api.makeAPIRequest(`admin/session/${sessionid}/status`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      return response;\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  const advanceGame = async () => {\n    const response = await api.makeAPIRequest(`admin/quiz/${gameid}/advance`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        setAdvanced(true);\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  // get player status\n  const getStatus = async () => {\n    const response = await api.makeAPIRequest(`play/${playerid}/status`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json.started;\n      } else {\n        setModalStatus((status) => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  // player id 0 identifies admin\n  useEffect(async () => {\n    if (localStorage.getItem('token') && playerid === '0') {\n      const r = await getAdminStatus();\n      const j = await r.json();\n      const newResults = j.results;\n      console.log(newResults);\n      if (r.status === 200) {\n        setIsAdmin(true);\n        if (newResults.position >= 0 && newResults.position < newResults.questions.length) {\n          history.push(`/play/${sessionid}/${gameid}/${playerid}`);\n        }\n      }\n      setResults(newResults);\n    }\n  }, [advanced]);\n\n  // player poll\n  useInterval(\n    async () => {\n      if (playerid !== '0') {\n        const started = await getStatus();\n        console.log('game started:', started);\n        if (started) {\n          history.push(`/play/${sessionid}/${gameid}/${playerid}`);\n        }\n      } else {\n        const r = await getAdminStatus();\n        const j = await r.json();\n        const newResults = j.results;\n        setResults(newResults);\n      }\n    },\n    500\n  );\n\n  return (\n    <>\n      <Container>\n        <Nav\n          visibilities={['false', 'false', 'false', 'true', 'false']}\n          exit={() => history.push('/')}\n        />\n        <MainContainer>\n          {isAdmin\n            ? <>\n              {results &&\n                <>\n                {results.players &&\n                  <PlayerNum>\n                    <span><BsPersonFill /></span>\n                    <span>{results.players.length}</span>\n                  </PlayerNum>\n                }\n                </>\n              }\n              <StartButton\n                onClick={advanceGame}>\n                Start\n              </StartButton>\n              <PlayerContainer>\n                {results.players &&\n                  <>\n                  {results.players.map((p, idx) => (\n                    <NameContainer key={idx}>\n                      <span >{p}</span>\n                    </NameContainer>\n\n                  ))}\n                  </>\n                }\n              </PlayerContainer>\n              </>\n            : <TextContainer>\n                <h1>You&apos;re in!</h1>\n                <p>See your nickname on screen?</p>\n              </TextContainer>\n          }\n        </MainContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default LobbyPage;\n","// Route: '/play/result/:playerid'\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { MyInfoCircle } from './PlayResultPage.styles';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Main } from '../../styles';\nimport { PageTitle } from '../ResultPage/ResultPage.styles';\nimport Nav from '../../components/Nav/Nav';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { StoreContext } from '../../utils/store';\nimport { ImCheckmark, ImCross } from 'react-icons/im';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nconst ResultPage = () => {\n  const { playerid } = useParams();\n  const context = useContext(StoreContext);\n  const history = useHistory();\n  const [api] = context.api;\n  const [, setModalStatus] = context.modalStatus;\n\n  // result info states\n\n  const [score, setScore] = useState(0);\n  const [results, setResults] = useState([]);\n  const [performances, setPerformances] = useState([]);\n  const [timeTaken, setTimeTaken] = useState([]);\n  const [points, setPoints] = useState([]);\n  // material ui styles\n  const useStyles = makeStyles({\n    tableContainer: {\n      margin: 20,\n      minWidth: 350,\n      maxWidth: 650,\n    },\n    table: {\n      minWidth: 350,\n      maxWidth: 650,\n      width: '90%',\n      margin: '0 auto',\n      '& th': {\n        fontSize: '1.2em',\n        fontWeight: 'bold',\n      },\n      '& td': {\n        fontSize: '1em',\n      },\n    },\n    greencheck: {\n      color: '#66bb6a',\n    },\n    redcross: {\n      color: '#ef5350',\n    },\n    message: {\n      fontSize: '1.2em',\n    }\n  });\n\n  const InfoTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: '#333333',\n      maxWidth: 250,\n      fontSize: theme.typography.pxToRem(14),\n      border: '1px solid #dadde9',\n    },\n  }))(Tooltip);\n  const classes = useStyles();\n\n  // api call functions\n  const getResults = async () => {\n    const response = await api.makeAPIRequest(`play/${playerid}/results`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n    try {\n      const json = await response.json();\n      if (response.status === 200) {\n        return json;\n      } else {\n        setModalStatus(status => ({\n          ...status,\n          modalActive: true,\n          overlayActive: true,\n          modalHeaderText: 'Error',\n          modalBodyText: json.error,\n          modalColors: 'error',\n        }));\n      }\n    } catch (e) {\n      console.log('ERROR', e);\n      setModalStatus(status => ({\n        ...status,\n        modalActive: true,\n        overlayActive: true,\n        modalHeaderText: 'Error',\n        modalBodyText: 'Sorry! Can\\' connect to the server.',\n        modalColors: 'error',\n      }));\n    }\n  };\n\n  // states setup\n  useEffect(async () => {\n    const r = await getResults();\n    setResults(r);\n    let newScore = 0;\n    const newPerformances = [];\n    const newTimeTaken = [];\n    const newPoints = [];\n    r.forEach((q, idx) => {\n      console.log(q);\n      newTimeTaken[idx] = Math.round((new Date(q.answeredAt) - new Date(q.questionStartedAt)) / 1000);\n      if (q.correct) {\n        newPoints[idx] = Math.round(q.questionPoints * (1 - (newTimeTaken[idx] / (q.questionDuration - 0.5))));\n        newScore += newPoints[idx];\n        newPerformances[idx] = true;\n      } else {\n        newPerformances[idx] = false;\n        newPoints[idx] = 0;\n      }\n    });\n    setScore(newScore);\n    setPoints(newPoints);\n    setPerformances(newPerformances);\n    console.log(performances);\n    console.log(newPerformances);\n    setTimeTaken(newTimeTaken);\n  }, []);\n\n  return (\n\n    <section>\n      <Nav\n        visibilities={['false', 'false', 'false', 'true', 'false']}\n        exit={() => history.push('/')}\n      />\n      <Main>\n        <PageTitle>Game result</PageTitle>\n        <p className={classes.message}>\n          You scored <strong>{score}</strong> points out of {results.reduce((accumulator, currentValue) => accumulator + currentValue.questionPoints, 0)}, {score > (results.reduce((accumulator, currentValue) => accumulator + currentValue.questionPoints, 0) / 2) ? 'well done!' : 'You can do better next time.'}\n        </p>\n        <TableContainer component={Paper} className={classes.tableContainer}>\n          <Table className={classes.table} aria-label='caption table'>\n            <caption>Player Performance</caption>\n            <TableHead>\n              <TableRow>\n                <TableCell align='center'>Question</TableCell>\n                <TableCell align='center'>Result</TableCell>\n                <TableCell align='center'>Time Taken</TableCell>\n                <TableCell align='center'>\n                  Points\n                  <InfoTooltip title={\n                                  <>\n                                    <Typography color='inherit'>Points scored are the product of the percentage of time left and total points of the question.</Typography>\n                                    <em><b>{'Equation: '}</b>{'points = (1 - (time taken/duration)) * total points'}</em><br/>\n                                  </>\n                                }>\n                    <span>\n                      <MyInfoCircle />\n                    </span>\n                  </InfoTooltip>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {results &&\n              <>\n              {results.map((q, idx) => (\n                  <TableRow key={idx}>\n                    <TableCell align='center'>\n                      {idx + 1 + ''}\n                    </TableCell>\n                    <TableCell align='center'>\n                      {q.correct\n                        ? <ImCheckmark className={classes.greencheck}/>\n                        : <ImCross className={classes.redcross}/>\n                      }\n                    </TableCell>\n                    <TableCell align='center'>\n                      {timeTaken[idx] === 0\n                        ? <>Not answered</>\n                        : timeTaken[idx] + '/' + (results[idx].questionDuration - 0.5)\n                      }\n                    </TableCell>\n                    <TableCell align='center'>\n                      {`${points[idx]}/${results[idx].questionPoints}`}\n                    </TableCell>\n                  </TableRow>\n              ))}\n              </>\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Main>\n    </section>\n\n  );\n};\n\nexport default ResultPage;\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport RegisterPage from './pages/RegisterPage/RegisterPage';\nimport DashboardPage from './pages/DashboardPage/DashboardPage';\nimport NewGamePage from './pages/NewGamePage/NewGamePage';\nimport StoreProvider from './utils/store';\nimport Modal from './components/Modal/Modal';\nimport Overlay from './components/Overlay/Overlay';\nimport EditGamePage from './pages/EditGamePage/EditGamePage';\nimport EditQuestionPage from './pages/EditQuestionPage/EditQuestionPage';\nimport ResultPage from './pages/ResultPage/ResultPage';\nimport JoinPage from './pages/JoinPage/JoinPage';\nimport PlayGamePage from './pages/PlayGamePage/PlayGamePage';\nimport LobbyPage from './pages/LobbyPage/LobbyPage';\nimport PlayResultPage from './pages/PlayResultPage/PlayResultPage';\nfunction App () {\n  return (\n    <StoreProvider>\n      <>\n        <Router basename='/BigBrain'>\n          <Switch>\n            <Route path='/login'>\n              <LoginPage />\n            </Route>\n            <Route path='/register'>\n              <RegisterPage />\n            </Route>\n            <Route exact path='/'>\n              <DashboardPage />\n            </Route>\n            <Route path='/newgame'>\n              <NewGamePage />\n            </Route>\n            <Route path='/lobby/:sessionid/:gameid/:playerid'>\n              <LobbyPage />\n            </Route>\n            <Route exact path='/game/result/:sessionid'>\n              <ResultPage />\n            </Route>\n            <Route exact path='/game/:gameid'>\n              <EditGamePage />\n            </Route>\n            <Route exact path='/game/:gameid/:qid'>\n              <EditQuestionPage />\n            </Route>\n            <Route exact path='/play/join/:sessionid/:gameid'>\n              <JoinPage />\n            </Route>\n            <Route exact path='/play/:sessionid/:gameid/:playerid'>\n              <PlayGamePage />\n            </Route>\n            <Route exact path='/play/result/:playerid'>\n              <PlayResultPage />\n            </Route>\n          </Switch>\n        </Router>\n        <Overlay />\n        <Modal />\n      </>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"GameCard_card__FP-Ao\",\"thumbnail\":\"GameCard_thumbnail__2UDQn\",\"addImageIcon\":\"GameCard_addImageIcon__3Z4kV\",\"img\":\"GameCard_img__bPA2w\",\"removeButton\":\"GameCard_removeButton__1SWya\",\"questionNum\":\"GameCard_questionNum__xsOtc\",\"info\":\"GameCard_info__32LXS\",\"rightTopContainer\":\"GameCard_rightTopContainer__1yIoM\",\"gameStatus\":\"GameCard_gameStatus__ABTwb\",\"copyButton\":\"GameCard_copyButton__2Kkkf\",\"confrimButton\":\"GameCard_confrimButton__ExZm7\",\"metadata\":\"GameCard_metadata__3pH1R\",\"buttons\":\"GameCard_buttons__LnSp9\",\"gameButtons\":\"GameCard_gameButtons__2HJ0o\",\"button\":\"GameCard_button__2ZIOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"QuestionCard_card__3EbUk\",\"title\":\"QuestionCard_title__1K3jm\",\"question\":\"QuestionCard_question__2Y9uQ\",\"mediaContainer\":\"QuestionCard_mediaContainer__3jVJq\",\"image\":\"QuestionCard_image__k9W4K\",\"icon\":\"QuestionCard_icon__2r1mx\",\"buttons\":\"QuestionCard_buttons__i2yo6\",\"button\":\"QuestionCard_button__33QwG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Nav_logo__348g8\",\"path\":\"Nav_path__3bBuB\",\"normal\":\"Nav_normal__1l64Q\",\"hidden\":\"Nav_hidden__3a5Dm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moreOptions\":\"Dropdown_moreOptions__2gqSh\",\"moreOptionsWrapper\":\"Dropdown_moreOptionsWrapper__1yif6\",\"icon\":\"Dropdown_icon__3VVFZ\",\"dropdown\":\"Dropdown_dropdown__fVfEx\",\"item\":\"Dropdown_item__13Fku\",\"innerItem\":\"Dropdown_innerItem__3ks1c\",\"content\":\"Dropdown_content__1bUId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalActive\":\"Modal_modalActive__33Ot0\",\"modalHidden\":\"Modal_modalHidden__PnVGC\",\"header\":\"Modal_header__StajR\",\"title\":\"Modal_title__kbqpq\",\"closeButton\":\"Modal_closeButton__840KP\",\"body\":\"Modal_body__3Izuw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"EditGamePage_main__2NqiE\",\"topBar\":\"EditGamePage_topBar__wvXEE\",\"editIcon\":\"EditGamePage_editIcon__1in3K\",\"nameInput\":\"EditGamePage_nameInput__3QSKO\",\"inputContainer\":\"EditGamePage_inputContainer__fBOsg\",\"questionContainer\":\"EditGamePage_questionContainer__3D7_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordField\":\"PasswordInput_passwordField__MRlLL\",\"passwordArea\":\"PasswordInput_passwordArea__25GYA\",\"showPasswordLogo\":\"PasswordInput_showPasswordLogo__2tXYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LoginPage_main__EKdF3\",\"button\":\"LoginPage_button__QN7tV\",\"message\":\"LoginPage_message__2VX3y\",\"error\":\"LoginPage_error__NOlyT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"RegisterPage_main__2DIPA\",\"button\":\"RegisterPage_button__1lZFi\",\"message\":\"RegisterPage_message__2QzAA\",\"error\":\"RegisterPage_error__Ln2FR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"DashboardPage_topBar__1HGtH\",\"buttons\":\"DashboardPage_buttons__ErXe_\",\"addGame\":\"DashboardPage_addGame__314Pn\",\"gameContainer\":\"DashboardPage_gameContainer__1XA_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"TextInput_inputField__3XUYT\",\"inputArea\":\"TextInput_inputArea__2AAl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlayHidden\":\"Overlay_overlayHidden__1Up40\",\"overlayActive\":\"Overlay_overlayActive__2AowR\"};"],"sourceRoot":""}